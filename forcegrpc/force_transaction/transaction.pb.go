// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transaction.proto

package force_transaction

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type TransactionRequest struct {
	Blocknum             int32    `protobuf:"varint,1,opt,name=blocknum,proto3" json:"blocknum,omitempty"`
	Trx                  string   `protobuf:"bytes,2,opt,name=trx,proto3" json:"trx,omitempty"`
	Trxid                string   `protobuf:"bytes,3,opt,name=trxid,proto3" json:"trxid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionRequest) Reset()         { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()    {}
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_335f3149f4b7930a, []int{0}
}
func (m *TransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRequest.Unmarshal(m, b)
}
func (m *TransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRequest.Marshal(b, m, deterministic)
}
func (dst *TransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequest.Merge(dst, src)
}
func (m *TransactionRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionRequest.Size(m)
}
func (m *TransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequest proto.InternalMessageInfo

func (m *TransactionRequest) GetBlocknum() int32 {
	if m != nil {
		return m.Blocknum
	}
	return 0
}

func (m *TransactionRequest) GetTrx() string {
	if m != nil {
		return m.Trx
	}
	return ""
}

func (m *TransactionRequest) GetTrxid() string {
	if m != nil {
		return m.Trxid
	}
	return ""
}

// The response message containing the greetings
type TransactionReply struct {
	Reply                string   `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionReply) Reset()         { *m = TransactionReply{} }
func (m *TransactionReply) String() string { return proto.CompactTextString(m) }
func (*TransactionReply) ProtoMessage()    {}
func (*TransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_335f3149f4b7930a, []int{1}
}
func (m *TransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionReply.Unmarshal(m, b)
}
func (m *TransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionReply.Marshal(b, m, deterministic)
}
func (dst *TransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionReply.Merge(dst, src)
}
func (m *TransactionReply) XXX_Size() int {
	return xxx_messageInfo_TransactionReply.Size(m)
}
func (m *TransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionReply proto.InternalMessageInfo

func (m *TransactionReply) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

func (m *TransactionReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*TransactionRequest)(nil), "force_transaction.TransactionRequest")
	proto.RegisterType((*TransactionReply)(nil), "force_transaction.TransactionReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcTransactionClient is the client API for GrpcTransaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcTransactionClient interface {
	// Sends a greeting
	RpcSendaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionReply, error)
}

type grpcTransactionClient struct {
	cc *grpc.ClientConn
}

func NewGrpcTransactionClient(cc *grpc.ClientConn) GrpcTransactionClient {
	return &grpcTransactionClient{cc}
}

func (c *grpcTransactionClient) RpcSendaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionReply, error) {
	out := new(TransactionReply)
	err := c.cc.Invoke(ctx, "/force_transaction.grpc_transaction/rpc_sendaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcTransactionServer is the server API for GrpcTransaction service.
type GrpcTransactionServer interface {
	// Sends a greeting
	RpcSendaction(context.Context, *TransactionRequest) (*TransactionReply, error)
}

func RegisterGrpcTransactionServer(s *grpc.Server, srv GrpcTransactionServer) {
	s.RegisterService(&_GrpcTransaction_serviceDesc, srv)
}

func _GrpcTransaction_RpcSendaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcTransactionServer).RpcSendaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/force_transaction.grpc_transaction/RpcSendaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcTransactionServer).RpcSendaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcTransaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "force_transaction.grpc_transaction",
	HandlerType: (*GrpcTransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "rpc_sendaction",
			Handler:    _GrpcTransaction_RpcSendaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

func init() { proto.RegisterFile("transaction.proto", fileDescriptor_transaction_335f3149f4b7930a) }

var fileDescriptor_transaction_335f3149f4b7930a = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4c,
	0xcb, 0x2f, 0x4a, 0x4e, 0x8d, 0x47, 0x92, 0x50, 0x8a, 0xe0, 0x12, 0x0a, 0x41, 0x70, 0x83, 0x52,
	0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xa4, 0xb8, 0x38, 0x92, 0x72, 0xf2, 0x93, 0xb3, 0xf3, 0x4a,
	0x73, 0x25, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0xe0, 0x7c, 0x21, 0x01, 0x2e, 0xe6, 0x92, 0xa2,
	0x0a, 0x09, 0x26, 0xa0, 0x30, 0x67, 0x10, 0x88, 0x29, 0x24, 0xc2, 0xc5, 0x0a, 0xa4, 0x32, 0x53,
	0x24, 0x98, 0xc1, 0x62, 0x10, 0x8e, 0x92, 0x13, 0x97, 0x00, 0x8a, 0xc9, 0x05, 0x39, 0x95, 0x20,
	0x95, 0x45, 0x20, 0x06, 0xd8, 0x50, 0xa0, 0x4a, 0x30, 0x47, 0x48, 0x82, 0x8b, 0x3d, 0x37, 0xb5,
	0xb8, 0x38, 0x31, 0x3d, 0x15, 0x6a, 0x2a, 0x8c, 0x6b, 0x54, 0xc4, 0x25, 0x90, 0x5e, 0x54, 0x90,
	0x8c, 0xec, 0x62, 0xa1, 0x38, 0x2e, 0x3e, 0x90, 0x50, 0x71, 0x6a, 0x5e, 0x0a, 0x54, 0x44, 0x55,
	0x0f, 0xc3, 0x5f, 0x7a, 0x98, 0x9e, 0x92, 0x52, 0x26, 0xa4, 0x0c, 0xe8, 0x16, 0x25, 0x06, 0x27,
	0x5d, 0x2e, 0xe1, 0xcc, 0x7c, 0x3d, 0x90, 0xb5, 0x7a, 0x48, 0x2a, 0x9d, 0xf8, 0x52, 0xf3, 0x8b,
	0x91, 0xf8, 0x01, 0x8c, 0x8b, 0x98, 0x98, 0x3d, 0x7c, 0xc2, 0x93, 0xd8, 0xc0, 0x41, 0x6b, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0xa7, 0xbf, 0x5a, 0xd7, 0x6f, 0x01, 0x00, 0x00,
}
