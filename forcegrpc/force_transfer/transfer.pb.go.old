// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transfer.proto

package force_transfer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type TransferRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount               string   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Demo                 string   `protobuf:"bytes,4,opt,name=demo,proto3" json:"demo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferRequest) Reset()         { *m = TransferRequest{} }
func (m *TransferRequest) String() string { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()    {}
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_transfer_48d710061f7566cf, []int{0}
}
func (m *TransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferRequest.Unmarshal(m, b)
}
func (m *TransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferRequest.Marshal(b, m, deterministic)
}
func (dst *TransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferRequest.Merge(dst, src)
}
func (m *TransferRequest) XXX_Size() int {
	return xxx_messageInfo_TransferRequest.Size(m)
}
func (m *TransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferRequest proto.InternalMessageInfo

func (m *TransferRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TransferRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransferRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *TransferRequest) GetDemo() string {
	if m != nil {
		return m.Demo
	}
	return ""
}

// The response message containing the greetings
type TransferReply struct {
	Reply                string   `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferReply) Reset()         { *m = TransferReply{} }
func (m *TransferReply) String() string { return proto.CompactTextString(m) }
func (*TransferReply) ProtoMessage()    {}
func (*TransferReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_transfer_48d710061f7566cf, []int{1}
}
func (m *TransferReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferReply.Unmarshal(m, b)
}
func (m *TransferReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferReply.Marshal(b, m, deterministic)
}
func (dst *TransferReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferReply.Merge(dst, src)
}
func (m *TransferReply) XXX_Size() int {
	return xxx_messageInfo_TransferReply.Size(m)
}
func (m *TransferReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferReply.DiscardUnknown(m)
}

var xxx_messageInfo_TransferReply proto.InternalMessageInfo

func (m *TransferReply) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

func (m *TransferReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*TransferRequest)(nil), "force_transfer.TransferRequest")
	proto.RegisterType((*TransferReply)(nil), "force_transfer.TransferReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcTransferClient is the client API for GrpcTransfer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcTransferClient interface {
	// Sends a greeting
	RpcSendaction(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferReply, error)
}

type grpcTransferClient struct {
	cc *grpc.ClientConn
}

func NewGrpcTransferClient(cc *grpc.ClientConn) GrpcTransferClient {
	return &grpcTransferClient{cc}
}

func (c *grpcTransferClient) RpcSendaction(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferReply, error) {
	out := new(TransferReply)
	err := c.cc.Invoke(ctx, "/force_transfer.grpc_transfer/rpc_sendaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcTransferServer is the server API for GrpcTransfer service.
type GrpcTransferServer interface {
	// Sends a greeting
	RpcSendaction(context.Context, *TransferRequest) (*TransferReply, error)
}

func RegisterGrpcTransferServer(s *grpc.Server, srv GrpcTransferServer) {
	s.RegisterService(&_GrpcTransfer_serviceDesc, srv)
}

func _GrpcTransfer_RpcSendaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcTransferServer).RpcSendaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/force_transfer.grpc_transfer/RpcSendaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcTransferServer).RpcSendaction(ctx, req.(*TransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcTransfer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "force_transfer.grpc_transfer",
	HandlerType: (*GrpcTransferServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "rpc_sendaction",
			Handler:    _GrpcTransfer_RpcSendaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transfer.proto",
}

func init() { proto.RegisterFile("transfer.proto", fileDescriptor_transfer_48d710061f7566cf) }

var fileDescriptor_transfer_48d710061f7566cf = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4b, 0xcb, 0x2f, 0x4a,
	0x4e, 0x8d, 0x87, 0x89, 0x2a, 0x25, 0x72, 0xf1, 0x87, 0x40, 0xd9, 0x41, 0xa9, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x69, 0x45, 0xf9, 0xb9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x60, 0xb6, 0x10, 0x1f, 0x17, 0x53, 0x49, 0xbe, 0x04, 0x13, 0x58, 0x04, 0xc8, 0x12, 0x12,
	0xe3, 0x62, 0x4b, 0xcc, 0xcd, 0x2f, 0xcd, 0x2b, 0x91, 0x60, 0x06, 0x8b, 0x41, 0x79, 0x20, 0xbd,
	0x29, 0xa9, 0xb9, 0xf9, 0x12, 0x2c, 0x10, 0xbd, 0x20, 0xb6, 0x92, 0x3d, 0x17, 0x2f, 0xc2, 0x8a,
	0x82, 0x9c, 0x4a, 0x21, 0x11, 0x2e, 0xd6, 0x22, 0x10, 0x03, 0x6a, 0x03, 0x84, 0x23, 0x24, 0xc1,
	0xc5, 0x9e, 0x9b, 0x5a, 0x5c, 0x9c, 0x98, 0x9e, 0x0a, 0xb5, 0x07, 0xc6, 0x35, 0x4a, 0xe6, 0xe2,
	0x4d, 0x2f, 0x2a, 0x48, 0x86, 0x3b, 0x5a, 0x28, 0x88, 0x8b, 0x0f, 0xc4, 0x2f, 0x4e, 0xcd, 0x4b,
	0x49, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0x13, 0x92, 0xd7, 0x43, 0xf5, 0x97, 0x1e, 0x9a, 0xa7, 0xa4,
	0x64, 0x71, 0x2b, 0x00, 0x5a, 0xae, 0xc4, 0xe0, 0xa4, 0xce, 0x25, 0x90, 0x99, 0xaf, 0x07, 0xb2,
	0x47, 0x0f, 0xa6, 0xc6, 0x89, 0x3b, 0x35, 0xbf, 0x18, 0xc6, 0x09, 0x60, 0x5c, 0xc4, 0xc4, 0xec,
	0xe1, 0x13, 0x9e, 0xc4, 0x06, 0x0e, 0x48, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x69, 0x46,
	0x07, 0x9f, 0x5a, 0x01, 0x00, 0x00,
}
