// Code generated by protoc-gen-go. DO NOT EDIT.
// source: block.proto

package force_block

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BlockTransRequest struct {
	Trx                  string   `protobuf:"bytes,1,opt,name=trx,proto3" json:"trx,omitempty"`
	Trxid                string   `protobuf:"bytes,2,opt,name=trxid,proto3" json:"trxid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockTransRequest) Reset()         { *m = BlockTransRequest{} }
func (m *BlockTransRequest) String() string { return proto.CompactTextString(m) }
func (*BlockTransRequest) ProtoMessage()    {}
func (*BlockTransRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_52b2342176e6dee6, []int{0}
}
func (m *BlockTransRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockTransRequest.Unmarshal(m, b)
}
func (m *BlockTransRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockTransRequest.Marshal(b, m, deterministic)
}
func (dst *BlockTransRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockTransRequest.Merge(dst, src)
}
func (m *BlockTransRequest) XXX_Size() int {
	return xxx_messageInfo_BlockTransRequest.Size(m)
}
func (m *BlockTransRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockTransRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockTransRequest proto.InternalMessageInfo

func (m *BlockTransRequest) GetTrx() string {
	if m != nil {
		return m.Trx
	}
	return ""
}

func (m *BlockTransRequest) GetTrxid() string {
	if m != nil {
		return m.Trxid
	}
	return ""
}

// The request message containing the user's name.
type BlockRequest struct {
	Blocknum             int32                `protobuf:"varint,1,opt,name=blocknum,proto3" json:"blocknum,omitempty"`
	Trans                []*BlockTransRequest `protobuf:"bytes,2,rep,name=trans,proto3" json:"trans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_52b2342176e6dee6, []int{1}
}
func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (dst *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(dst, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest proto.InternalMessageInfo

func (m *BlockRequest) GetBlocknum() int32 {
	if m != nil {
		return m.Blocknum
	}
	return 0
}

func (m *BlockRequest) GetTrans() []*BlockTransRequest {
	if m != nil {
		return m.Trans
	}
	return nil
}

// The response message containing the greetings
type BlockReply struct {
	Reply                string   `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockReply) Reset()         { *m = BlockReply{} }
func (m *BlockReply) String() string { return proto.CompactTextString(m) }
func (*BlockReply) ProtoMessage()    {}
func (*BlockReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_52b2342176e6dee6, []int{2}
}
func (m *BlockReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockReply.Unmarshal(m, b)
}
func (m *BlockReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockReply.Marshal(b, m, deterministic)
}
func (dst *BlockReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockReply.Merge(dst, src)
}
func (m *BlockReply) XXX_Size() int {
	return xxx_messageInfo_BlockReply.Size(m)
}
func (m *BlockReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockReply.DiscardUnknown(m)
}

var xxx_messageInfo_BlockReply proto.InternalMessageInfo

func (m *BlockReply) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

func (m *BlockReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*BlockTransRequest)(nil), "force_block.BlockTransRequest")
	proto.RegisterType((*BlockRequest)(nil), "force_block.BlockRequest")
	proto.RegisterType((*BlockReply)(nil), "force_block.BlockReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcBlockClient is the client API for GrpcBlock service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcBlockClient interface {
	// Sends a greeting
	RpcSendaction(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockReply, error)
}

type grpcBlockClient struct {
	cc *grpc.ClientConn
}

func NewGrpcBlockClient(cc *grpc.ClientConn) GrpcBlockClient {
	return &grpcBlockClient{cc}
}

func (c *grpcBlockClient) RpcSendaction(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockReply, error) {
	out := new(BlockReply)
	err := c.cc.Invoke(ctx, "/force_block.grpc_block/rpc_sendaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcBlockServer is the server API for GrpcBlock service.
type GrpcBlockServer interface {
	// Sends a greeting
	RpcSendaction(context.Context, *BlockRequest) (*BlockReply, error)
}

func RegisterGrpcBlockServer(s *grpc.Server, srv GrpcBlockServer) {
	s.RegisterService(&_GrpcBlock_serviceDesc, srv)
}

func _GrpcBlock_RpcSendaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcBlockServer).RpcSendaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/force_block.grpc_block/RpcSendaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcBlockServer).RpcSendaction(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcBlock_serviceDesc = grpc.ServiceDesc{
	ServiceName: "force_block.grpc_block",
	HandlerType: (*GrpcBlockServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "rpc_sendaction",
			Handler:    _GrpcBlock_RpcSendaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "block.proto",
}

func init() { proto.RegisterFile("block.proto", fileDescriptor_block_52b2342176e6dee6) }

var fileDescriptor_block_52b2342176e6dee6 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0xca, 0xc9, 0x4f,
	0xce, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0xcb, 0x2f, 0x4a, 0x4e, 0x8d, 0x07,
	0x0b, 0x29, 0x59, 0x73, 0x09, 0x3a, 0x81, 0x18, 0x21, 0x45, 0x89, 0x79, 0xc5, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x02, 0x5c, 0xcc, 0x25, 0x45, 0x15, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0x9c, 0x41, 0x20, 0xa6, 0x90, 0x08, 0x17, 0x2b, 0x90, 0xca, 0x4c, 0x91, 0x60, 0x02, 0x8b, 0x41,
	0x38, 0x4a, 0x09, 0x5c, 0x3c, 0x60, 0xcd, 0x30, 0x7d, 0x52, 0x5c, 0x1c, 0x60, 0x53, 0xf3, 0x4a,
	0x73, 0xc1, 0x9a, 0x59, 0x83, 0xe0, 0x7c, 0x21, 0x13, 0x90, 0x09, 0x40, 0x3b, 0x80, 0x26, 0x30,
	0x6b, 0x70, 0x1b, 0xc9, 0xe9, 0x21, 0xb9, 0x42, 0x0f, 0xc3, 0x09, 0x41, 0x10, 0xc5, 0x4a, 0x36,
	0x5c, 0x5c, 0x50, 0x1b, 0x0a, 0x72, 0x2a, 0x41, 0xae, 0x28, 0x02, 0x31, 0xa0, 0x2e, 0x83, 0x70,
	0x84, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0xa1, 0xae, 0x83, 0x71, 0x8d,
	0x42, 0xb8, 0xb8, 0xd2, 0x8b, 0x0a, 0x92, 0x21, 0x96, 0x08, 0xb9, 0x71, 0xf1, 0x81, 0x38, 0xc5,
	0xa9, 0x79, 0x29, 0x89, 0xc9, 0x25, 0x99, 0xf9, 0x79, 0x42, 0x92, 0x98, 0x8e, 0x80, 0xda, 0x2f,
	0x25, 0x8e, 0x4d, 0x0a, 0x68, 0x9b, 0x12, 0x83, 0x93, 0x22, 0x17, 0x6f, 0x66, 0xbe, 0x1e, 0xc8,
	0x60, 0x3d, 0xb0, 0xac, 0x13, 0x47, 0x6a, 0x7e, 0x31, 0x98, 0x15, 0xc0, 0xb8, 0x88, 0x89, 0xd9,
	0xc3, 0x27, 0x3c, 0x89, 0x0d, 0x1c, 0xd2, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x21, 0x6b,
	0x0f, 0x13, 0x78, 0x01, 0x00, 0x00,
}
